if __name__ == '__main__':
    #These "asserts" using only for self-checking and not necessary for auto-testing
    
	ronald = Warlord()
	heimdall = Knight()

	assert fight(heimdall, ronald) == False

	my_army = Army()
	my_army.add_units(Warlord, 1)
	my_army.add_units(Warrior, 2)
	my_army.add_units(Lancer, 2)
	my_army.add_units(Healer, 2)

	enemy_army = Army()
	enemy_army.add_units(Warlord, 3)
	enemy_army.add_units(Vampire, 1)
	enemy_army.add_units(Healer, 2)
	enemy_army.add_units(Knight, 2)

	my_army.move_units()
	enemy_army.move_units()

	assert type(my_army.units[0]) == Lancer
	assert type(my_army.units[1]) == Healer
	assert type(my_army.units[-1]) == Warlord

	assert type(enemy_army.units[0]) == Vampire
	assert type(enemy_army.units[-1]) == Warlord
	assert type(enemy_army.units[-2]) == Knight

	#6, not 8, because only 1 Warlord per army could be
	assert len(enemy_army.units) == 6

	battle = Battle()

	assert battle.fight(my_army, enemy_army) == True
    print("Coding complete? Let's try tests!")
